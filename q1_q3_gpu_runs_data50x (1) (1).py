# -*- coding: utf-8 -*-
"""Q1_Q3_GPU_Runs_Data50x

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FItnev-H1wgYSSfqmzdEqP59SJ7gGOXk
"""

# Import required libraries
import rasterio
import numpy as np
import time
from numba import vectorize, cuda
from cupyx.profiler import benchmark

# Import bands as separate images; in /project2/macs30113 on Midway2
band4 = rasterio.open(
      '/home/imajumd0/week3/landsat8/LC08_B4.tif') #red
band5 = rasterio.open(
      '/home/imajumd0/week3/landsat8/LC08_B5.tif') #nir

# Convert nir and red objects to float64 arrays
red = band4.read(1).astype('float64')
nir = band5.read(1).astype('float64')

red50 = np.tile(red, 50)
nir50 = np.tile(nir, 50)

@vectorize(['f8(f8, f8)'], target='cuda')
def ndvi_calc(x, y):
  #NDVI calculation
  ndvi = (y - x) / (y + x)
  return ndvi

#x and y are 50 dimensional arrays
def ndvi_calc_py(x, y):
  ndvi = np.zeros((len(x), 50))
  for i in range(50):
    x_contig = np.ascontiguousarray(x[:, i])
    y_contig = np.ascontiguousarray(y[:, i])
    ndvi[:, i] = ndvi_calc(x_contig, y_contig)
  return ndvi

runtime = benchmark(ndvi_calc_py, (red50, nir50), n_repeat=100)

#write it to a GPU_Data1x_out.txt file
with open("/home/imajumd0/week3/GPU_Data50x.out", "w") as f:
    f.write(str(runtime))